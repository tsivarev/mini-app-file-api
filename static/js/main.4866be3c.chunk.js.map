{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","copyToClipboard","bind","assertThisInitialized","xhr","XMLHttpRequest","open","process","responseType","onload","imageUrl","window","URL","webkitURL","createObjectURL","response","setState","send","text","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","_this2","react_default","a","vkui","id","activePanel","description","multiline","before","src","size","bottomContent","onClick","React","Component","connect","ReactDOM","render","src_App","getElementById"],"mappings":"0NA6DeA,sBAxDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,IAAK,IAGPR,EAAKS,gBAAkBT,EAAKS,gBAAgBC,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPNA,mFAWjB,IAAIY,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOC,+BAChBH,EAAII,aAAe,OACnBJ,EAAIK,OAAS,WACX,IACIC,GADaC,OAAOC,KAAOD,OAAOE,WACZC,gBAAgBV,EAAIW,UAC9CpB,KAAKqB,SAAS,CAAChB,IAAKU,KACpBR,KAAKP,MACPS,EAAIa,KAAK,8CAGKC,GACd,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGG,MAAQJ,EACXC,EAAGI,aAAa,WAAY,IAC5BJ,EAAGK,MAAMC,SAAW,WACpBN,EAAGK,MAAME,KAAO,UAChBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAGU,SACHT,SAASU,YAAY,QACrBV,SAASO,KAAKI,YAAYZ,oCAGnB,IAAAa,EAAArC,KACP,OACEsC,EAAAC,EAAAb,cAACc,EAAA,KAAD,CAAMC,GAAG,OAAOC,YAAY,aAC1BJ,EAAAC,EAAAb,cAACc,EAAA,MAAD,CAAOC,GAAG,aACRH,EAAAC,EAAAb,cAACc,EAAA,YAAD,gBACAF,EAAAC,EAAAb,cAACc,EAAA,MAAD,KACEF,EAAAC,EAAAb,cAACc,EAAA,KAAD,CACEG,YAAY,OACnBC,WAAW,EACJC,OAAQP,EAAAC,EAAAb,cAACc,EAAA,OAAD,CAAQM,IAAK9C,KAAKI,MAAMC,IAAK0C,KAAM,KAC3CC,cAAeV,EAAAC,EAAAb,cAACc,EAAA,OAAD,CAAQS,QAAS,WAAOZ,EAAK/B,gBAAgB+B,EAAKjC,MAAMC,OAAxD,sEACf0C,KAAK,KAEJ/C,KAAKI,MAAMC,eAhDR6C,IAAMC,YCIxBC,IAAQ9B,KAAK,eAAgB,IAE7B+B,IAASC,OAAOhB,EAAAC,EAAAb,cAAC6B,EAAD,MAAS9B,SAAS+B,eAAe","file":"static/js/main.4866be3c.chunk.js","sourcesContent":["import React from 'react';\nimport {Avatar, Button, Cell, Group, Panel, PanelHeader, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: ''\n    };\n\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  componentDidMount() {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", process.env.PUBLIC_URL + \"/logo.jpg\");\n    xhr.responseType = \"blob\";\n    xhr.onload = function() {\n      let urlCreator = window.URL || window.webkitURL;\n      let imageUrl = urlCreator.createObjectURL(xhr.response);\n      this.setState({url: imageUrl});\n    }.bind(this);\n    xhr.send(null);\n  }\n\n  copyToClipboard(text) {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  render() {\n    return (\n      <View id='main' activePanel='mainPanel'>\n        <Panel id='mainPanel'>\n          <PanelHeader>Example</PanelHeader>\n          <Group>\n            <Cell\n              description=\"BLOB\"\n\t\t\t\t\t\t\tmultiline={true}\n              before={<Avatar src={this.state.url} size={80}/>}\n              bottomContent={<Button onClick={() => {this.copyToClipboard(this.state.url)}}>Скопировать</Button>}\n              size=\"l\"\n            >\n              {this.state.url}\n            </Cell>\n          </Group>\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}